#jinja2: trim_blocks: True, lstrip_blocks: True
<?xml version="1.0" encoding="UTF-8"?>
<!--
    WARNING:
    this file is auto-generated by Tomcat Ansible role (zaxos.tomcat-ansible-role)
    DO NOT EDIT
    all local changes will be overwritten!

    generated at {{ ansible_date_time.iso8601 }}
-->
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<Server port="{{ tomcat_port_shutdown }}" shutdown="SHUTDOWN">
  <!-- see https://tomcat.apache.org/tomcat-9.0-doc/config/listeners.html for -->
{% for listener in tomcat_server_listeners %}
  {% if tomcat_server_listeners_conf[listener.split(".") | list | last] is defined %}
    {% set listener_conf = tomcat_server_listeners_conf[listener.split(".") | list | last] ~' ' %}
  {% else %}
    {% set listener_conf = "" %}
  {% endif %}
  <Listener className="{{ listener }}" {{ listener_conf }}/>
{% endfor %}

  <!-- Global JNDI resources. Documentation at /docs/jndi-resources-howto.html -->
  <GlobalNamingResources>
    <!-- Editable user database that can also be used by UserDatabaseRealm to authenticate users -->
    <Resource name="UserDatabase"
              auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">

    <!--The connectors can use a shared executor, you can define one or more named thread pools-->
    <!--
    <Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
        maxThreads="150" minSpareThreads="4"/>
    -->

    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
    -->
{% if tomcat_port_http > 0 %}

    <!-- Define a non-SSL/TLS HTTP/1.1 Connector -->
    <Connector port="{{ tomcat_port_http }}"
      protocol="org.apache.coyote.http11.Http11AprProtocol"
      redirectPort="{{ tomcat_port_https }}"
      allowTrace="false"
      compression="on"
      connectionTimeout="10000"
      discardFacades="true"
      maxConnections="4000"
      maxHttpHeaderSize="16384"
      maxPostSize="2097152"
      maxSavePostSize="4096"
      maxThreads="150"
      SSLEnabled="false"
      URIEncoding="UTF-8"
      xpoweredBy="false" />
{% endif %}
{% if tomcat_port_http > 0 %}

    <!-- Define a SSL/TLS HTTP/1.1 Connector with HTTP/2
         This connector uses the APR/native implementation. When using the
         APR/native implementation or the OpenSSL engine with NIO or NIO2 then
         the OpenSSL configuration attributes must be used.
    -->
    <Connector port="{{ tomcat_port_https }}"
      protocol="org.apache.coyote.http11.Http11AprProtocol"
      SSLEnabled="true"
      secure="true"
      allowTrace="false"
      compression="on"
      connectionTimeout="10000"
      discardFacades="true"
      maxConnections="4000"
      maxHttpHeaderSize="16384"
      maxPostSize="2097152"
      maxSavePostSize="4096"
      maxThreads="150"
      URIEncoding="UTF-8"
      xpoweredBy="false" >

      <UpgradeProtocol className="org.apache.coyote.http2.Http2Protocol" />

      <!-- more about ciphers at https://owasp.org/www-project-cheat-sheets/cheatsheets/TLS_Cipher_String_Cheat_Sheet -->
      <SSLHostConfig
        disableSessionTickets="true"
        honorCipherOrder="true"
        protocols="{{ tls_protocols | sort(reverse=True) | join(",") }}"
        ciphers="{{ tls_cipher_suites | join(",") }}"
        >
          <Certificate
            certificateKeyFile="{{ tomcat_ssl_certificate.key }}"
  {% if tomcat_ssl_certificate.chain is defined %}
            certificateChainFile="{{ tomcat_ssl_certificate.chain }}" />
  {% endif %}
  {% if tomcat_ssl_certificate.type is defined %}
            type="{{ tomcat_ssl_certificate.type }}" />
  {% endif %}
            certificateFile="{{ tomcat_ssl_certificate.file }}" />
      </SSLHostConfig>
    </Connector>
{% endif %}
{% if tomcat_port_ajp > 0 %}

    <!-- Define an AJP 1.3 Connector-->
    <Connector port="{{ tomcat_port_ajp }}" protocol="AJP/1.3" redirectPort="{{ tomcat_port_https }}" />
{% endif %}


    <!-- An Engine represents the entry point (within Catalina) that processes
         every request.  The Engine implementation for Tomcat stand alone
         analyzes the HTTP headers included with the request, and passes them
         on to the appropriate Host (virtual host).
         Documentation at /docs/config/engine.html -->

    <!-- You should set jvmRoute to support load-balancing via AJP ie :
    <Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
    -->
    <Engine name="Catalina" defaultHost="localhost">

      <!--For clustering, please take a look at documentation at:
          /docs/cluster-howto.html  (simple how to)
          /docs/config/cluster.html (reference documentation) -->
      <!--
      <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
      -->

      <!-- Use the LockOutRealm to prevent attempts to guess user passwords via a brute-force attack -->
      <Realm className="org.apache.catalina.realm.LockOutRealm">
        <Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase"/>
      </Realm>


      <Host name="localhost" appBase="webapps" unpackWARs="false" autoDeploy="false" deployXML="false">

        <!-- SingleSignOn valve, share authentication between web applications
             Documentation at: /docs/config/valve.html -->
        <!--
        <Valve className="org.apache.catalina.authenticator.SingleSignOn" />
        -->

        <!-- Preventing potential DoS by limiting request processing time -->
        <Valve className="org.apache.catalina.valves.StuckThreadDetectionValve" threshold="60" />

        <!-- Access from approved IP addresses (IP whitelisting). Default - Docker subnets -->
        <!--
        <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="172\.(1[6-9]|2[0-9]|3[01])\.\d+\.\d+"/>
        -->

        <!-- ensures that crawlers are associated with a single session - just like normal users -
             regardless of whether or not they provide a session token with their requests. -->
        <Valve className="org.apache.catalina.valves.CrawlerSessionManagerValve" hostAware="true" contextAware="true" />

        <!-- Disabling reporting of stack traces and server info -->
        <Valve className="org.apache.catalina.valves.ErrorReportValve" showReport="false" showServerInfo="false" />

        <!-- Default Access Log -->
        <Valve className="org.apache.catalina.valves.AccessLogValve"
          directory="logs"
          buffered="true"
          enableLookups="false"
          maxDays="90"
          pattern="%{yyyy-MM-dd'T'HH:mm:ss.SSSZ}t %a %u %s &quot;%r&quot; %b Connector:%p elapsed:%D X-Fwd-For:%{X-Forwarded-For}i Referer:&quot;%{Referer}i&quot; User-Agent:&quot;%{User-Agent}i&quot;"
          prefix="access"
          suffix=".log" />
      </Host>

    </Engine>
  </Service>
</Server>
